#!/usr/bin/env ruby
require 'yaml'
require 'optparse'
require 'set'
require 'net/http'

$filename = './packages.yml'

$default_options = { 'update' => false, 'doctor' => true, 'prune' => true, 'analytics' => true }

$user_packages = YAML.load_file($filename) || {}

def command(command, output)
  STDOUT.puts output
  %x( #{command} )
end

def save_formula(formula, type)
  packages = $user_packages[type] ? $user_packages[type].to_set : Set.new
  packages.add formula
  $user_packages[type] = packages.to_a.sort
  File.open($filename, 'w+') {|f| f.write($user_packages.to_yaml) }
end

def brew_install(package, save = false)
  save_formula package, 'packages' if save
  command "brew install #{package}", "Installing package '#{package}'"
end

def cask_install(cask, save = false)
  save_formula cask, 'casks' if save
  command "brew cask install #{cask}", "Installing cask '#{cask}'"
end

def install_formulae formulae
  STDOUT.puts 'Installing packages with brew'
  formulae['packages'].each do |package|
    brew_install package
  end

  STDOUT.puts 'Installing applications with brew cask'
  formulae['casks'].each do |cask|
    cask_install cask
  end
end

def install
  options = $user_packages['options'] ? $default_options.merge($user_packages['options']) : $default_options

  STDOUT.puts 'Tidying homebrew'

  if options['update']
    command 'brew update', 'Updating homebrew'
  end

  if options['doctor']
    command 'brew doctor', 'Letting homebrew see the Doctor'
  end

  if options['prune']
    command 'brew prune', 'Removing dead symlinks'
  end

  unless options['analytics']
    command 'brew analytics off', 'Opting out of homebrew analytics'
  end

  command 'brew tap caskroom/cask', 'Setting up brew cask'

  install_formulae $user_packages

  STDOUT.puts 'install complete'
end

$opts = {}

OptionParser.new do |op|
 op.on('-c', '--cask', 'use homebrew-cask') do |val|
   $opts[:cask] = true
 end
 op.on('-s', '--save', 'install one formula and add to your packages.yml file') do |val|
   $opts[:save] = true
 end
 op.on('-r', '--repo REPO', "install formula from someone's packages.yml on GitHub") do |repo|
   $opts[:repo] = repo
 end
end.parse!

case ARGV[0]
when 'install', 'i'
  if ARGV[1]
    formula = ARGV[1]
    $opts[:cask] ? cask_install(formula, $opts[:save]) : brew_install(formula, $opts[:save])
  elsif $opts[:repo]
    uri = URI("https://raw.githubusercontent.com/#{$opts[:repo]}/master/packages.yml")
    response = Net::HTTP.get_response(uri)
    unless (response.code == '200')
      STDOUT.puts 'Could not find packages.yml file. Specify in the format "user/repo" e.g. "rouanw/test-packages". The repo must contain a valid "packages.yml" file at its root.'
      exit 1
    end
    install_formulae YAML.load(response.body)
  else
    install
  end
else
  STDOUT.puts <<-EOF
Unsupported or no command provided.

Available commands:
- brewpack install
EOF
end
