#!/usr/bin/env ruby
require 'yaml'
require 'optparse'

$filename = './packages.yml'

$defaults = { 'update' => true, 'doctor' => true, 'prune' => true, 'analytics' => true, }

def command(command, output)
  STDOUT.puts output
  %x( #{command} )
end

def brew_install(package)
  command "brew install #{package}", "Installing package '#{package}'"
end

def cask_install(cask)
  command "brew cask install #{cask}", "Installing cask '#{cask}'"
end

def install
  user_options = YAML.load(File.read($filename))
  options = $defaults.merge(user_options)

  STDOUT.puts 'Tidying homebrew'

  if options['update']
    command 'brew update', 'Updating homebrew'
  end

  if options['doctor']
    command 'brew doctor', 'Letting homebrew see the Doctor'
  end

  if options['prune']
    command 'brew prune', 'Removing dead symlinks'
  end

  unless options['analytics']
    command 'brew analytics off', 'Opting out of homebrew analytics'
  end

  STDOUT.puts 'Installing packages with brew'
  options['packages'].each do |package|
    brew_install package
  end

  command 'brew tap caskroom/cask', 'Setting up brew cask'

  STDOUT.puts 'Installing applications with brew cask'
  options['casks'].each do |cask|
    cask_install cask
  end

  STDOUT.puts 'install complete'
end

$opts = {}

OptionParser.new do |op|
 op.on('-c', '--cask', 'use homebrew-cask') do |val|
   $opts[:cask] = true
 end
end.parse!

case ARGV[0]
when 'install', 'i'
  if ARGV[1]
    formula = ARGV[1]
    $opts[:cask] ? (cask_install formula) : (brew_install formula)
  else
    install
  end
else
  STDOUT.puts <<-EOF
Unsupported or no command provided.

Available commands:
- brewpack install
EOF
end
